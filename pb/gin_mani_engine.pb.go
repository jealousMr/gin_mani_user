// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: gin_mani_engine.proto

package pb_mani

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FileAction int32

const (
	FileAction_unknown_file_action  FileAction = 0
	FileAction_default_all_action   FileAction = 1
	FileAction_open_all_action      FileAction = 2
	FileAction_default_image_action FileAction = 3
)

// Enum value maps for FileAction.
var (
	FileAction_name = map[int32]string{
		0: "unknown_file_action",
		1: "default_all_action",
		2: "open_all_action",
		3: "default_image_action",
	}
	FileAction_value = map[string]int32{
		"unknown_file_action":  0,
		"default_all_action":   1,
		"open_all_action":      2,
		"default_image_action": 3,
	}
)

func (x FileAction) Enum() *FileAction {
	p := new(FileAction)
	*p = x
	return p
}

func (x FileAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileAction) Descriptor() protoreflect.EnumDescriptor {
	return file_gin_mani_engine_proto_enumTypes[0].Descriptor()
}

func (FileAction) Type() protoreflect.EnumType {
	return &file_gin_mani_engine_proto_enumTypes[0]
}

func (x FileAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileAction.Descriptor instead.
func (FileAction) EnumDescriptor() ([]byte, []int) {
	return file_gin_mani_engine_proto_rawDescGZIP(), []int{0}
}

type CrmType int32

const (
	CrmType_unknown_crm CrmType = 0
	CrmType_user_crm    CrmType = 1
	CrmType_sys_crm     CrmType = 2
)

// Enum value maps for CrmType.
var (
	CrmType_name = map[int32]string{
		0: "unknown_crm",
		1: "user_crm",
		2: "sys_crm",
	}
	CrmType_value = map[string]int32{
		"unknown_crm": 0,
		"user_crm":    1,
		"sys_crm":     2,
	}
)

func (x CrmType) Enum() *CrmType {
	p := new(CrmType)
	*p = x
	return p
}

func (x CrmType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CrmType) Descriptor() protoreflect.EnumDescriptor {
	return file_gin_mani_engine_proto_enumTypes[1].Descriptor()
}

func (CrmType) Type() protoreflect.EnumType {
	return &file_gin_mani_engine_proto_enumTypes[1]
}

func (x CrmType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CrmType.Descriptor instead.
func (CrmType) EnumDescriptor() ([]byte, []int) {
	return file_gin_mani_engine_proto_rawDescGZIP(), []int{1}
}

type FileUriToServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName   string     `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Files      []byte     `protobuf:"bytes,2,opt,name=files,proto3" json:"files,omitempty"`
	FileAction FileAction `protobuf:"varint,3,opt,name=file_action,json=fileAction,proto3,enum=pb_mani.FileAction" json:"file_action,omitempty"`
	Base       *Base      `protobuf:"bytes,255,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *FileUriToServerReq) Reset() {
	*x = FileUriToServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gin_mani_engine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUriToServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUriToServerReq) ProtoMessage() {}

func (x *FileUriToServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_gin_mani_engine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUriToServerReq.ProtoReflect.Descriptor instead.
func (*FileUriToServerReq) Descriptor() ([]byte, []int) {
	return file_gin_mani_engine_proto_rawDescGZIP(), []int{0}
}

func (x *FileUriToServerReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileUriToServerReq) GetFiles() []byte {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *FileUriToServerReq) GetFileAction() FileAction {
	if x != nil {
		return x.FileAction
	}
	return FileAction_unknown_file_action
}

func (x *FileUriToServerReq) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type FileUriToServerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string    `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	SaveUrl  string    `protobuf:"bytes,2,opt,name=save_url,json=saveUrl,proto3" json:"save_url,omitempty"`
	BaseResp *BaseResp `protobuf:"bytes,255,opt,name=base_resp,json=baseResp,proto3" json:"base_resp,omitempty"`
}

func (x *FileUriToServerResp) Reset() {
	*x = FileUriToServerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gin_mani_engine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUriToServerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUriToServerResp) ProtoMessage() {}

func (x *FileUriToServerResp) ProtoReflect() protoreflect.Message {
	mi := &file_gin_mani_engine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUriToServerResp.ProtoReflect.Descriptor instead.
func (*FileUriToServerResp) Descriptor() ([]byte, []int) {
	return file_gin_mani_engine_proto_rawDescGZIP(), []int{1}
}

func (x *FileUriToServerResp) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileUriToServerResp) GetSaveUrl() string {
	if x != nil {
		return x.SaveUrl
	}
	return ""
}

func (x *FileUriToServerResp) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type CrmUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag     string  `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Url     string  `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Name    string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CrmType CrmType `protobuf:"varint,4,opt,name=crm_type,json=crmType,proto3,enum=pb_mani.CrmType" json:"crm_type,omitempty"`
}

func (x *CrmUrl) Reset() {
	*x = CrmUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gin_mani_engine_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrmUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrmUrl) ProtoMessage() {}

func (x *CrmUrl) ProtoReflect() protoreflect.Message {
	mi := &file_gin_mani_engine_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrmUrl.ProtoReflect.Descriptor instead.
func (*CrmUrl) Descriptor() ([]byte, []int) {
	return file_gin_mani_engine_proto_rawDescGZIP(), []int{2}
}

func (x *CrmUrl) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *CrmUrl) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CrmUrl) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CrmUrl) GetCrmType() CrmType {
	if x != nil {
		return x.CrmType
	}
	return CrmType_unknown_crm
}

type FileUriToCrmReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrmList    []*CrmUrl  `protobuf:"bytes,1,rep,name=crm_list,json=crmList,proto3" json:"crm_list,omitempty"`
	FileAction FileAction `protobuf:"varint,2,opt,name=file_action,json=fileAction,proto3,enum=pb_mani.FileAction" json:"file_action,omitempty"`
	Base       *Base      `protobuf:"bytes,255,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *FileUriToCrmReq) Reset() {
	*x = FileUriToCrmReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gin_mani_engine_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUriToCrmReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUriToCrmReq) ProtoMessage() {}

func (x *FileUriToCrmReq) ProtoReflect() protoreflect.Message {
	mi := &file_gin_mani_engine_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUriToCrmReq.ProtoReflect.Descriptor instead.
func (*FileUriToCrmReq) Descriptor() ([]byte, []int) {
	return file_gin_mani_engine_proto_rawDescGZIP(), []int{3}
}

func (x *FileUriToCrmReq) GetCrmList() []*CrmUrl {
	if x != nil {
		return x.CrmList
	}
	return nil
}

func (x *FileUriToCrmReq) GetFileAction() FileAction {
	if x != nil {
		return x.FileAction
	}
	return FileAction_unknown_file_action
}

func (x *FileUriToCrmReq) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type FileUriToCrmResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagUrlMap map[string]string `protobuf:"bytes,1,rep,name=tag_url_map,json=tagUrlMap,proto3" json:"tag_url_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BaseResp  *BaseResp         `protobuf:"bytes,255,opt,name=base_resp,json=baseResp,proto3" json:"base_resp,omitempty"`
}

func (x *FileUriToCrmResp) Reset() {
	*x = FileUriToCrmResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gin_mani_engine_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUriToCrmResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUriToCrmResp) ProtoMessage() {}

func (x *FileUriToCrmResp) ProtoReflect() protoreflect.Message {
	mi := &file_gin_mani_engine_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUriToCrmResp.ProtoReflect.Descriptor instead.
func (*FileUriToCrmResp) Descriptor() ([]byte, []int) {
	return file_gin_mani_engine_proto_rawDescGZIP(), []int{4}
}

func (x *FileUriToCrmResp) GetTagUrlMap() map[string]string {
	if x != nil {
		return x.TagUrlMap
	}
	return nil
}

func (x *FileUriToCrmResp) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type CreateTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Base *Base `protobuf:"bytes,255,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *CreateTaskReq) Reset() {
	*x = CreateTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gin_mani_engine_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskReq) ProtoMessage() {}

func (x *CreateTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_gin_mani_engine_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskReq.ProtoReflect.Descriptor instead.
func (*CreateTaskReq) Descriptor() ([]byte, []int) {
	return file_gin_mani_engine_proto_rawDescGZIP(), []int{5}
}

func (x *CreateTaskReq) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *CreateTaskReq) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type CreateTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId   string    `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	BaseResp *BaseResp `protobuf:"bytes,255,opt,name=base_resp,json=baseResp,proto3" json:"base_resp,omitempty"`
}

func (x *CreateTaskResp) Reset() {
	*x = CreateTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gin_mani_engine_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskResp) ProtoMessage() {}

func (x *CreateTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_gin_mani_engine_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskResp.ProtoReflect.Descriptor instead.
func (*CreateTaskResp) Descriptor() ([]byte, []int) {
	return file_gin_mani_engine_proto_rawDescGZIP(), []int{6}
}

func (x *CreateTaskResp) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *CreateTaskResp) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type QueryTaskByConditionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId       string       `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	RuleId       string       `protobuf:"bytes,2,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	ExecuteState ExecuteState `protobuf:"varint,3,opt,name=execute_state,json=executeState,proto3,enum=pb_mani.ExecuteState" json:"execute_state,omitempty"`
	Base         *Base        `protobuf:"bytes,255,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *QueryTaskByConditionReq) Reset() {
	*x = QueryTaskByConditionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gin_mani_engine_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTaskByConditionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTaskByConditionReq) ProtoMessage() {}

func (x *QueryTaskByConditionReq) ProtoReflect() protoreflect.Message {
	mi := &file_gin_mani_engine_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTaskByConditionReq.ProtoReflect.Descriptor instead.
func (*QueryTaskByConditionReq) Descriptor() ([]byte, []int) {
	return file_gin_mani_engine_proto_rawDescGZIP(), []int{7}
}

func (x *QueryTaskByConditionReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *QueryTaskByConditionReq) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *QueryTaskByConditionReq) GetExecuteState() ExecuteState {
	if x != nil {
		return x.ExecuteState
	}
	return ExecuteState_execute_unknow
}

func (x *QueryTaskByConditionReq) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type QueryTaskByConditionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskList []*Task   `protobuf:"bytes,1,rep,name=task_list,json=taskList,proto3" json:"task_list,omitempty"`
	BaseResp *BaseResp `protobuf:"bytes,255,opt,name=base_resp,json=baseResp,proto3" json:"base_resp,omitempty"`
}

func (x *QueryTaskByConditionResp) Reset() {
	*x = QueryTaskByConditionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gin_mani_engine_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTaskByConditionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTaskByConditionResp) ProtoMessage() {}

func (x *QueryTaskByConditionResp) ProtoReflect() protoreflect.Message {
	mi := &file_gin_mani_engine_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTaskByConditionResp.ProtoReflect.Descriptor instead.
func (*QueryTaskByConditionResp) Descriptor() ([]byte, []int) {
	return file_gin_mani_engine_proto_rawDescGZIP(), []int{8}
}

func (x *QueryTaskByConditionResp) GetTaskList() []*Task {
	if x != nil {
		return x.TaskList
	}
	return nil
}

func (x *QueryTaskByConditionResp) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type UpdateTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Base *Base `protobuf:"bytes,255,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *UpdateTaskReq) Reset() {
	*x = UpdateTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gin_mani_engine_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskReq) ProtoMessage() {}

func (x *UpdateTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_gin_mani_engine_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskReq.ProtoReflect.Descriptor instead.
func (*UpdateTaskReq) Descriptor() ([]byte, []int) {
	return file_gin_mani_engine_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateTaskReq) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *UpdateTaskReq) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type UpdateTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,255,opt,name=base_resp,json=baseResp,proto3" json:"base_resp,omitempty"`
}

func (x *UpdateTaskResp) Reset() {
	*x = UpdateTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gin_mani_engine_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskResp) ProtoMessage() {}

func (x *UpdateTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_gin_mani_engine_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskResp.ProtoReflect.Descriptor instead.
func (*UpdateTaskResp) Descriptor() ([]byte, []int) {
	return file_gin_mani_engine_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateTaskResp) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type GetTaskByRulesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuleList []string `protobuf:"bytes,1,rep,name=rule_list,json=ruleList,proto3" json:"rule_list,omitempty"`
	Base     *Base    `protobuf:"bytes,255,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *GetTaskByRulesReq) Reset() {
	*x = GetTaskByRulesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gin_mani_engine_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskByRulesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskByRulesReq) ProtoMessage() {}

func (x *GetTaskByRulesReq) ProtoReflect() protoreflect.Message {
	mi := &file_gin_mani_engine_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskByRulesReq.ProtoReflect.Descriptor instead.
func (*GetTaskByRulesReq) Descriptor() ([]byte, []int) {
	return file_gin_mani_engine_proto_rawDescGZIP(), []int{11}
}

func (x *GetTaskByRulesReq) GetRuleList() []string {
	if x != nil {
		return x.RuleList
	}
	return nil
}

func (x *GetTaskByRulesReq) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type GetTaskByRulesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuleTaskMap map[string]*Task `protobuf:"bytes,1,rep,name=rule_task_map,json=ruleTaskMap,proto3" json:"rule_task_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BaseResp    *BaseResp        `protobuf:"bytes,255,opt,name=base_resp,json=baseResp,proto3" json:"base_resp,omitempty"`
}

func (x *GetTaskByRulesResp) Reset() {
	*x = GetTaskByRulesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gin_mani_engine_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskByRulesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskByRulesResp) ProtoMessage() {}

func (x *GetTaskByRulesResp) ProtoReflect() protoreflect.Message {
	mi := &file_gin_mani_engine_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskByRulesResp.ProtoReflect.Descriptor instead.
func (*GetTaskByRulesResp) Descriptor() ([]byte, []int) {
	return file_gin_mani_engine_proto_rawDescGZIP(), []int{12}
}

func (x *GetTaskByRulesResp) GetRuleTaskMap() map[string]*Task {
	if x != nil {
		return x.RuleTaskMap
	}
	return nil
}

func (x *GetTaskByRulesResp) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

var File_gin_mani_engine_proto protoreflect.FileDescriptor

var file_gin_mani_engine_proto_rawDesc = []byte{
	0x0a, 0x15, 0x67, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x5f, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69,
	0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1,
	0x01, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x69, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x22, 0x7e, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x69, 0x54, 0x6f, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x61, 0x76, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x2f, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xff,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x6d, 0x0a, 0x06, 0x43, 0x72, 0x6d, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x63, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69,
	0x2e, 0x43, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x63, 0x72, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x97, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x69, 0x54, 0x6f, 0x43,
	0x72, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x08, 0x63, 0x72, 0x6d, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e,
	0x69, 0x2e, 0x43, 0x72, 0x6d, 0x55, 0x72, 0x6c, 0x52, 0x07, 0x63, 0x72, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x34, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x69, 0x6c,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x10,
	0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x69, 0x54, 0x6f, 0x43, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x48, 0x0a, 0x0b, 0x74, 0x61, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x6d, 0x61, 0x70, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x69, 0x54, 0x6f, 0x43, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x54, 0x61, 0x67, 0x55, 0x72, 0x6c, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x74, 0x61, 0x67, 0x55, 0x72, 0x6c, 0x4d, 0x61, 0x70, 0x12, 0x2f, 0x0a, 0x09, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x1a, 0x3c, 0x0a, 0x0e, 0x54,
	0x61, 0x67, 0x55, 0x72, 0x6c, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x56, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x61,
	0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61,
	0x6e, 0x69, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x22, 0x0a,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x22, 0x5a, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x09,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0xab, 0x01,
	0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0d, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x77, 0x0a, 0x18, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x5f,
	0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e,
	0x69, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x56, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x22, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e,
	0x69, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x41, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f,
	0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xff, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x54, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0xe6, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x42, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0d,
	0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0b, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x61, 0x70, 0x12, 0x2f,
	0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xff, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x1a,
	0x4d, 0x0a, 0x10, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x6c,
	0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x13,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x03, 0x2a, 0x35, 0x0a, 0x07,
	0x43, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x63, 0x72, 0x6d, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x63, 0x72, 0x6d, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x5f, 0x63, 0x72,
	0x6d, 0x10, 0x02, 0x32, 0xcb, 0x03, 0x0a, 0x10, 0x47, 0x69, 0x6e, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65,
	0x55, 0x72, 0x69, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x70, 0x62,
	0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x69, 0x54, 0x6f, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61,
	0x6e, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x69, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72,
	0x69, 0x54, 0x6f, 0x43, 0x72, 0x6d, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x69, 0x54, 0x6f, 0x43, 0x72, 0x6d, 0x52, 0x65, 0x71,
	0x1a, 0x19, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55,
	0x72, 0x69, 0x54, 0x6f, 0x43, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x5f, 0x6d,
	0x61, 0x6e, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5b, 0x0a, 0x14, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e,
	0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x42, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61,
	0x6e, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gin_mani_engine_proto_rawDescOnce sync.Once
	file_gin_mani_engine_proto_rawDescData = file_gin_mani_engine_proto_rawDesc
)

func file_gin_mani_engine_proto_rawDescGZIP() []byte {
	file_gin_mani_engine_proto_rawDescOnce.Do(func() {
		file_gin_mani_engine_proto_rawDescData = protoimpl.X.CompressGZIP(file_gin_mani_engine_proto_rawDescData)
	})
	return file_gin_mani_engine_proto_rawDescData
}

var file_gin_mani_engine_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_gin_mani_engine_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_gin_mani_engine_proto_goTypes = []interface{}{
	(FileAction)(0),                  // 0: pb_mani.FileAction
	(CrmType)(0),                     // 1: pb_mani.CrmType
	(*FileUriToServerReq)(nil),       // 2: pb_mani.FileUriToServerReq
	(*FileUriToServerResp)(nil),      // 3: pb_mani.FileUriToServerResp
	(*CrmUrl)(nil),                   // 4: pb_mani.CrmUrl
	(*FileUriToCrmReq)(nil),          // 5: pb_mani.FileUriToCrmReq
	(*FileUriToCrmResp)(nil),         // 6: pb_mani.FileUriToCrmResp
	(*CreateTaskReq)(nil),            // 7: pb_mani.CreateTaskReq
	(*CreateTaskResp)(nil),           // 8: pb_mani.CreateTaskResp
	(*QueryTaskByConditionReq)(nil),  // 9: pb_mani.QueryTaskByConditionReq
	(*QueryTaskByConditionResp)(nil), // 10: pb_mani.QueryTaskByConditionResp
	(*UpdateTaskReq)(nil),            // 11: pb_mani.UpdateTaskReq
	(*UpdateTaskResp)(nil),           // 12: pb_mani.UpdateTaskResp
	(*GetTaskByRulesReq)(nil),        // 13: pb_mani.GetTaskByRulesReq
	(*GetTaskByRulesResp)(nil),       // 14: pb_mani.GetTaskByRulesResp
	nil,                              // 15: pb_mani.FileUriToCrmResp.TagUrlMapEntry
	nil,                              // 16: pb_mani.GetTaskByRulesResp.RuleTaskMapEntry
	(*Base)(nil),                     // 17: pb_mani.Base
	(*BaseResp)(nil),                 // 18: pb_mani.BaseResp
	(*Task)(nil),                     // 19: pb_mani.Task
	(ExecuteState)(0),                // 20: pb_mani.ExecuteState
}
var file_gin_mani_engine_proto_depIdxs = []int32{
	0,  // 0: pb_mani.FileUriToServerReq.file_action:type_name -> pb_mani.FileAction
	17, // 1: pb_mani.FileUriToServerReq.base:type_name -> pb_mani.Base
	18, // 2: pb_mani.FileUriToServerResp.base_resp:type_name -> pb_mani.BaseResp
	1,  // 3: pb_mani.CrmUrl.crm_type:type_name -> pb_mani.CrmType
	4,  // 4: pb_mani.FileUriToCrmReq.crm_list:type_name -> pb_mani.CrmUrl
	0,  // 5: pb_mani.FileUriToCrmReq.file_action:type_name -> pb_mani.FileAction
	17, // 6: pb_mani.FileUriToCrmReq.base:type_name -> pb_mani.Base
	15, // 7: pb_mani.FileUriToCrmResp.tag_url_map:type_name -> pb_mani.FileUriToCrmResp.TagUrlMapEntry
	18, // 8: pb_mani.FileUriToCrmResp.base_resp:type_name -> pb_mani.BaseResp
	19, // 9: pb_mani.CreateTaskReq.task:type_name -> pb_mani.Task
	17, // 10: pb_mani.CreateTaskReq.base:type_name -> pb_mani.Base
	18, // 11: pb_mani.CreateTaskResp.base_resp:type_name -> pb_mani.BaseResp
	20, // 12: pb_mani.QueryTaskByConditionReq.execute_state:type_name -> pb_mani.ExecuteState
	17, // 13: pb_mani.QueryTaskByConditionReq.base:type_name -> pb_mani.Base
	19, // 14: pb_mani.QueryTaskByConditionResp.task_list:type_name -> pb_mani.Task
	18, // 15: pb_mani.QueryTaskByConditionResp.base_resp:type_name -> pb_mani.BaseResp
	19, // 16: pb_mani.UpdateTaskReq.task:type_name -> pb_mani.Task
	17, // 17: pb_mani.UpdateTaskReq.base:type_name -> pb_mani.Base
	18, // 18: pb_mani.UpdateTaskResp.base_resp:type_name -> pb_mani.BaseResp
	17, // 19: pb_mani.GetTaskByRulesReq.base:type_name -> pb_mani.Base
	16, // 20: pb_mani.GetTaskByRulesResp.rule_task_map:type_name -> pb_mani.GetTaskByRulesResp.RuleTaskMapEntry
	18, // 21: pb_mani.GetTaskByRulesResp.base_resp:type_name -> pb_mani.BaseResp
	19, // 22: pb_mani.GetTaskByRulesResp.RuleTaskMapEntry.value:type_name -> pb_mani.Task
	2,  // 23: pb_mani.GinEngineService.FileUriToServer:input_type -> pb_mani.FileUriToServerReq
	5,  // 24: pb_mani.GinEngineService.FileUriToCrm:input_type -> pb_mani.FileUriToCrmReq
	7,  // 25: pb_mani.GinEngineService.CreateTask:input_type -> pb_mani.CreateTaskReq
	9,  // 26: pb_mani.GinEngineService.QueryTaskByCondition:input_type -> pb_mani.QueryTaskByConditionReq
	11, // 27: pb_mani.GinEngineService.UpdateTask:input_type -> pb_mani.UpdateTaskReq
	13, // 28: pb_mani.GinEngineService.GetTaskByRules:input_type -> pb_mani.GetTaskByRulesReq
	3,  // 29: pb_mani.GinEngineService.FileUriToServer:output_type -> pb_mani.FileUriToServerResp
	6,  // 30: pb_mani.GinEngineService.FileUriToCrm:output_type -> pb_mani.FileUriToCrmResp
	8,  // 31: pb_mani.GinEngineService.CreateTask:output_type -> pb_mani.CreateTaskResp
	10, // 32: pb_mani.GinEngineService.QueryTaskByCondition:output_type -> pb_mani.QueryTaskByConditionResp
	12, // 33: pb_mani.GinEngineService.UpdateTask:output_type -> pb_mani.UpdateTaskResp
	14, // 34: pb_mani.GinEngineService.GetTaskByRules:output_type -> pb_mani.GetTaskByRulesResp
	29, // [29:35] is the sub-list for method output_type
	23, // [23:29] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_gin_mani_engine_proto_init() }
func file_gin_mani_engine_proto_init() {
	if File_gin_mani_engine_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gin_mani_engine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUriToServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gin_mani_engine_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUriToServerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gin_mani_engine_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrmUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gin_mani_engine_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUriToCrmReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gin_mani_engine_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUriToCrmResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gin_mani_engine_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gin_mani_engine_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gin_mani_engine_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTaskByConditionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gin_mani_engine_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTaskByConditionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gin_mani_engine_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gin_mani_engine_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gin_mani_engine_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskByRulesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gin_mani_engine_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskByRulesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gin_mani_engine_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gin_mani_engine_proto_goTypes,
		DependencyIndexes: file_gin_mani_engine_proto_depIdxs,
		EnumInfos:         file_gin_mani_engine_proto_enumTypes,
		MessageInfos:      file_gin_mani_engine_proto_msgTypes,
	}.Build()
	File_gin_mani_engine_proto = out.File
	file_gin_mani_engine_proto_rawDesc = nil
	file_gin_mani_engine_proto_goTypes = nil
	file_gin_mani_engine_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GinEngineServiceClient is the client API for GinEngineService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GinEngineServiceClient interface {
	FileUriToServer(ctx context.Context, in *FileUriToServerReq, opts ...grpc.CallOption) (*FileUriToServerResp, error)
	FileUriToCrm(ctx context.Context, in *FileUriToCrmReq, opts ...grpc.CallOption) (*FileUriToCrmResp, error)
	CreateTask(ctx context.Context, in *CreateTaskReq, opts ...grpc.CallOption) (*CreateTaskResp, error)
	QueryTaskByCondition(ctx context.Context, in *QueryTaskByConditionReq, opts ...grpc.CallOption) (*QueryTaskByConditionResp, error)
	UpdateTask(ctx context.Context, in *UpdateTaskReq, opts ...grpc.CallOption) (*UpdateTaskResp, error)
	GetTaskByRules(ctx context.Context, in *GetTaskByRulesReq, opts ...grpc.CallOption) (*GetTaskByRulesResp, error)
}

type ginEngineServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGinEngineServiceClient(cc grpc.ClientConnInterface) GinEngineServiceClient {
	return &ginEngineServiceClient{cc}
}

func (c *ginEngineServiceClient) FileUriToServer(ctx context.Context, in *FileUriToServerReq, opts ...grpc.CallOption) (*FileUriToServerResp, error) {
	out := new(FileUriToServerResp)
	err := c.cc.Invoke(ctx, "/pb_mani.GinEngineService/FileUriToServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ginEngineServiceClient) FileUriToCrm(ctx context.Context, in *FileUriToCrmReq, opts ...grpc.CallOption) (*FileUriToCrmResp, error) {
	out := new(FileUriToCrmResp)
	err := c.cc.Invoke(ctx, "/pb_mani.GinEngineService/FileUriToCrm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ginEngineServiceClient) CreateTask(ctx context.Context, in *CreateTaskReq, opts ...grpc.CallOption) (*CreateTaskResp, error) {
	out := new(CreateTaskResp)
	err := c.cc.Invoke(ctx, "/pb_mani.GinEngineService/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ginEngineServiceClient) QueryTaskByCondition(ctx context.Context, in *QueryTaskByConditionReq, opts ...grpc.CallOption) (*QueryTaskByConditionResp, error) {
	out := new(QueryTaskByConditionResp)
	err := c.cc.Invoke(ctx, "/pb_mani.GinEngineService/QueryTaskByCondition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ginEngineServiceClient) UpdateTask(ctx context.Context, in *UpdateTaskReq, opts ...grpc.CallOption) (*UpdateTaskResp, error) {
	out := new(UpdateTaskResp)
	err := c.cc.Invoke(ctx, "/pb_mani.GinEngineService/UpdateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ginEngineServiceClient) GetTaskByRules(ctx context.Context, in *GetTaskByRulesReq, opts ...grpc.CallOption) (*GetTaskByRulesResp, error) {
	out := new(GetTaskByRulesResp)
	err := c.cc.Invoke(ctx, "/pb_mani.GinEngineService/GetTaskByRules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GinEngineServiceServer is the server API for GinEngineService service.
type GinEngineServiceServer interface {
	FileUriToServer(context.Context, *FileUriToServerReq) (*FileUriToServerResp, error)
	FileUriToCrm(context.Context, *FileUriToCrmReq) (*FileUriToCrmResp, error)
	CreateTask(context.Context, *CreateTaskReq) (*CreateTaskResp, error)
	QueryTaskByCondition(context.Context, *QueryTaskByConditionReq) (*QueryTaskByConditionResp, error)
	UpdateTask(context.Context, *UpdateTaskReq) (*UpdateTaskResp, error)
	GetTaskByRules(context.Context, *GetTaskByRulesReq) (*GetTaskByRulesResp, error)
}

// UnimplementedGinEngineServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGinEngineServiceServer struct {
}

func (*UnimplementedGinEngineServiceServer) FileUriToServer(context.Context, *FileUriToServerReq) (*FileUriToServerResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileUriToServer not implemented")
}
func (*UnimplementedGinEngineServiceServer) FileUriToCrm(context.Context, *FileUriToCrmReq) (*FileUriToCrmResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileUriToCrm not implemented")
}
func (*UnimplementedGinEngineServiceServer) CreateTask(context.Context, *CreateTaskReq) (*CreateTaskResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTask not implemented")
}
func (*UnimplementedGinEngineServiceServer) QueryTaskByCondition(context.Context, *QueryTaskByConditionReq) (*QueryTaskByConditionResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryTaskByCondition not implemented")
}
func (*UnimplementedGinEngineServiceServer) UpdateTask(context.Context, *UpdateTaskReq) (*UpdateTaskResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTask not implemented")
}
func (*UnimplementedGinEngineServiceServer) GetTaskByRules(context.Context, *GetTaskByRulesReq) (*GetTaskByRulesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaskByRules not implemented")
}

func RegisterGinEngineServiceServer(s *grpc.Server, srv GinEngineServiceServer) {
	s.RegisterService(&_GinEngineService_serviceDesc, srv)
}

func _GinEngineService_FileUriToServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileUriToServerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GinEngineServiceServer).FileUriToServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb_mani.GinEngineService/FileUriToServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GinEngineServiceServer).FileUriToServer(ctx, req.(*FileUriToServerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GinEngineService_FileUriToCrm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileUriToCrmReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GinEngineServiceServer).FileUriToCrm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb_mani.GinEngineService/FileUriToCrm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GinEngineServiceServer).FileUriToCrm(ctx, req.(*FileUriToCrmReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GinEngineService_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GinEngineServiceServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb_mani.GinEngineService/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GinEngineServiceServer).CreateTask(ctx, req.(*CreateTaskReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GinEngineService_QueryTaskByCondition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryTaskByConditionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GinEngineServiceServer).QueryTaskByCondition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb_mani.GinEngineService/QueryTaskByCondition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GinEngineServiceServer).QueryTaskByCondition(ctx, req.(*QueryTaskByConditionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GinEngineService_UpdateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTaskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GinEngineServiceServer).UpdateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb_mani.GinEngineService/UpdateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GinEngineServiceServer).UpdateTask(ctx, req.(*UpdateTaskReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GinEngineService_GetTaskByRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskByRulesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GinEngineServiceServer).GetTaskByRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb_mani.GinEngineService/GetTaskByRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GinEngineServiceServer).GetTaskByRules(ctx, req.(*GetTaskByRulesReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _GinEngineService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb_mani.GinEngineService",
	HandlerType: (*GinEngineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FileUriToServer",
			Handler:    _GinEngineService_FileUriToServer_Handler,
		},
		{
			MethodName: "FileUriToCrm",
			Handler:    _GinEngineService_FileUriToCrm_Handler,
		},
		{
			MethodName: "CreateTask",
			Handler:    _GinEngineService_CreateTask_Handler,
		},
		{
			MethodName: "QueryTaskByCondition",
			Handler:    _GinEngineService_QueryTaskByCondition_Handler,
		},
		{
			MethodName: "UpdateTask",
			Handler:    _GinEngineService_UpdateTask_Handler,
		},
		{
			MethodName: "GetTaskByRules",
			Handler:    _GinEngineService_GetTaskByRules_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gin_mani_engine.proto",
}
