// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: gin_mani_user.proto

package pb_mani

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AddAndUpdateUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo *UserInfo `protobuf:"bytes,1,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	Base     *Base     `protobuf:"bytes,255,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *AddAndUpdateUserInfoReq) Reset() {
	*x = AddAndUpdateUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gin_mani_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAndUpdateUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAndUpdateUserInfoReq) ProtoMessage() {}

func (x *AddAndUpdateUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_gin_mani_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAndUpdateUserInfoReq.ProtoReflect.Descriptor instead.
func (*AddAndUpdateUserInfoReq) Descriptor() ([]byte, []int) {
	return file_gin_mani_user_proto_rawDescGZIP(), []int{0}
}

func (x *AddAndUpdateUserInfoReq) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *AddAndUpdateUserInfoReq) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type AddAndUpdateUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,255,opt,name=base_resp,json=baseResp,proto3" json:"base_resp,omitempty"`
}

func (x *AddAndUpdateUserInfoResp) Reset() {
	*x = AddAndUpdateUserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gin_mani_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAndUpdateUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAndUpdateUserInfoResp) ProtoMessage() {}

func (x *AddAndUpdateUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_gin_mani_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAndUpdateUserInfoResp.ProtoReflect.Descriptor instead.
func (*AddAndUpdateUserInfoResp) Descriptor() ([]byte, []int) {
	return file_gin_mani_user_proto_rawDescGZIP(), []int{1}
}

func (x *AddAndUpdateUserInfoResp) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

var File_gin_mani_user_proto protoreflect.FileDescriptor

var file_gin_mani_user_proto_rawDesc = []byte{
	0x0a, 0x13, 0x67, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x1a, 0x0c,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6d, 0x0a, 0x17,
	0x41, 0x64, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f,
	0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x18, 0x41,
	0x64, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62,
	0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x32, 0x6d, 0x0a, 0x0e, 0x47, 0x69, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x14, 0x41, 0x64,
	0x64, 0x41, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x20, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x41, 0x64, 0x64,
	0x41, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x2e, 0x41,
	0x64, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gin_mani_user_proto_rawDescOnce sync.Once
	file_gin_mani_user_proto_rawDescData = file_gin_mani_user_proto_rawDesc
)

func file_gin_mani_user_proto_rawDescGZIP() []byte {
	file_gin_mani_user_proto_rawDescOnce.Do(func() {
		file_gin_mani_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_gin_mani_user_proto_rawDescData)
	})
	return file_gin_mani_user_proto_rawDescData
}

var file_gin_mani_user_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gin_mani_user_proto_goTypes = []interface{}{
	(*AddAndUpdateUserInfoReq)(nil),  // 0: pb_mani.AddAndUpdateUserInfoReq
	(*AddAndUpdateUserInfoResp)(nil), // 1: pb_mani.AddAndUpdateUserInfoResp
	(*UserInfo)(nil),                 // 2: pb_mani.UserInfo
	(*Base)(nil),                     // 3: pb_mani.Base
	(*BaseResp)(nil),                 // 4: pb_mani.BaseResp
}
var file_gin_mani_user_proto_depIdxs = []int32{
	2, // 0: pb_mani.AddAndUpdateUserInfoReq.user_info:type_name -> pb_mani.UserInfo
	3, // 1: pb_mani.AddAndUpdateUserInfoReq.base:type_name -> pb_mani.Base
	4, // 2: pb_mani.AddAndUpdateUserInfoResp.base_resp:type_name -> pb_mani.BaseResp
	0, // 3: pb_mani.GinUserService.AddAndUpdateUserInfo:input_type -> pb_mani.AddAndUpdateUserInfoReq
	1, // 4: pb_mani.GinUserService.AddAndUpdateUserInfo:output_type -> pb_mani.AddAndUpdateUserInfoResp
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_gin_mani_user_proto_init() }
func file_gin_mani_user_proto_init() {
	if File_gin_mani_user_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gin_mani_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAndUpdateUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gin_mani_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAndUpdateUserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gin_mani_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gin_mani_user_proto_goTypes,
		DependencyIndexes: file_gin_mani_user_proto_depIdxs,
		MessageInfos:      file_gin_mani_user_proto_msgTypes,
	}.Build()
	File_gin_mani_user_proto = out.File
	file_gin_mani_user_proto_rawDesc = nil
	file_gin_mani_user_proto_goTypes = nil
	file_gin_mani_user_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GinUserServiceClient is the client API for GinUserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GinUserServiceClient interface {
	AddAndUpdateUserInfo(ctx context.Context, in *AddAndUpdateUserInfoReq, opts ...grpc.CallOption) (*AddAndUpdateUserInfoResp, error)
}

type ginUserServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGinUserServiceClient(cc grpc.ClientConnInterface) GinUserServiceClient {
	return &ginUserServiceClient{cc}
}

func (c *ginUserServiceClient) AddAndUpdateUserInfo(ctx context.Context, in *AddAndUpdateUserInfoReq, opts ...grpc.CallOption) (*AddAndUpdateUserInfoResp, error) {
	out := new(AddAndUpdateUserInfoResp)
	err := c.cc.Invoke(ctx, "/pb_mani.GinUserService/AddAndUpdateUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GinUserServiceServer is the server API for GinUserService service.
type GinUserServiceServer interface {
	AddAndUpdateUserInfo(context.Context, *AddAndUpdateUserInfoReq) (*AddAndUpdateUserInfoResp, error)
}

// UnimplementedGinUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGinUserServiceServer struct {
}

func (*UnimplementedGinUserServiceServer) AddAndUpdateUserInfo(context.Context, *AddAndUpdateUserInfoReq) (*AddAndUpdateUserInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAndUpdateUserInfo not implemented")
}

func RegisterGinUserServiceServer(s *grpc.Server, srv GinUserServiceServer) {
	s.RegisterService(&_GinUserService_serviceDesc, srv)
}

func _GinUserService_AddAndUpdateUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAndUpdateUserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GinUserServiceServer).AddAndUpdateUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb_mani.GinUserService/AddAndUpdateUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GinUserServiceServer).AddAndUpdateUserInfo(ctx, req.(*AddAndUpdateUserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _GinUserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb_mani.GinUserService",
	HandlerType: (*GinUserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddAndUpdateUserInfo",
			Handler:    _GinUserService_AddAndUpdateUserInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gin_mani_user.proto",
}
